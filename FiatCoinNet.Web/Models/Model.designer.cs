#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FiatCoinNetWeb.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FiatCoinDB")]
	public partial class ModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLowerLevelBlock(LowerLevelBlock instance);
    partial void UpdateLowerLevelBlock(LowerLevelBlock instance);
    partial void DeleteLowerLevelBlock(LowerLevelBlock instance);
    #endregion
		
		public ModelDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["FiatCoinDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LowerLevelBlock> LowerLevelBlocks
		{
			get
			{
				return this.GetTable<LowerLevelBlock>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LowerLevelBlock")]
	public partial class LowerLevelBlock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _BlockSize;
		
		private string _Hash;
		
		private string _TransactionCounter;
		
		private string _Period;
		
		private string _SignatureToCertifyIssuer;
		
		private string _Issuer;
		
		private string _hashPrevBlock;
		
		private string _hashMerkleRoot;
		
		private string _Time;
		
		private System.Nullable<int> _Bits;
		
		private System.Nullable<int> _Version;
		
		private System.Nullable<decimal> _TotalSent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBlockSizeChanging(string value);
    partial void OnBlockSizeChanged();
    partial void OnHashChanging(string value);
    partial void OnHashChanged();
    partial void OnTransactionCounterChanging(string value);
    partial void OnTransactionCounterChanged();
    partial void OnPeriodChanging(string value);
    partial void OnPeriodChanged();
    partial void OnSignatureToCertifyIssuerChanging(string value);
    partial void OnSignatureToCertifyIssuerChanged();
    partial void OnIssuerChanging(string value);
    partial void OnIssuerChanged();
    partial void OnhashPrevBlockChanging(string value);
    partial void OnhashPrevBlockChanged();
    partial void OnhashMerkleRootChanging(string value);
    partial void OnhashMerkleRootChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnBitsChanging(System.Nullable<int> value);
    partial void OnBitsChanged();
    partial void OnVersionChanging(System.Nullable<int> value);
    partial void OnVersionChanged();
    partial void OnTotalSentChanging(System.Nullable<decimal> value);
    partial void OnTotalSentChanged();
    #endregion
		
		public LowerLevelBlock()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockSize", DbType="VarChar(4)")]
		public string BlockSize
		{
			get
			{
				return this._BlockSize;
			}
			set
			{
				if ((this._BlockSize != value))
				{
					this.OnBlockSizeChanging(value);
					this.SendPropertyChanging();
					this._BlockSize = value;
					this.SendPropertyChanged("BlockSize");
					this.OnBlockSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hash", DbType="VarChar(100)")]
		public string Hash
		{
			get
			{
				return this._Hash;
			}
			set
			{
				if ((this._Hash != value))
				{
					this.OnHashChanging(value);
					this.SendPropertyChanging();
					this._Hash = value;
					this.SendPropertyChanged("Hash");
					this.OnHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionCounter", DbType="VarChar(100)")]
		public string TransactionCounter
		{
			get
			{
				return this._TransactionCounter;
			}
			set
			{
				if ((this._TransactionCounter != value))
				{
					this.OnTransactionCounterChanging(value);
					this.SendPropertyChanging();
					this._TransactionCounter = value;
					this.SendPropertyChanged("TransactionCounter");
					this.OnTransactionCounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="VarChar(100)")]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignatureToCertifyIssuer", DbType="VarChar(100)")]
		public string SignatureToCertifyIssuer
		{
			get
			{
				return this._SignatureToCertifyIssuer;
			}
			set
			{
				if ((this._SignatureToCertifyIssuer != value))
				{
					this.OnSignatureToCertifyIssuerChanging(value);
					this.SendPropertyChanging();
					this._SignatureToCertifyIssuer = value;
					this.SendPropertyChanged("SignatureToCertifyIssuer");
					this.OnSignatureToCertifyIssuerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Issuer", DbType="VarChar(100)")]
		public string Issuer
		{
			get
			{
				return this._Issuer;
			}
			set
			{
				if ((this._Issuer != value))
				{
					this.OnIssuerChanging(value);
					this.SendPropertyChanging();
					this._Issuer = value;
					this.SendPropertyChanged("Issuer");
					this.OnIssuerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hashPrevBlock", DbType="VarChar(100)")]
		public string hashPrevBlock
		{
			get
			{
				return this._hashPrevBlock;
			}
			set
			{
				if ((this._hashPrevBlock != value))
				{
					this.OnhashPrevBlockChanging(value);
					this.SendPropertyChanging();
					this._hashPrevBlock = value;
					this.SendPropertyChanged("hashPrevBlock");
					this.OnhashPrevBlockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hashMerkleRoot", DbType="VarChar(100)")]
		public string hashMerkleRoot
		{
			get
			{
				return this._hashMerkleRoot;
			}
			set
			{
				if ((this._hashMerkleRoot != value))
				{
					this.OnhashMerkleRootChanging(value);
					this.SendPropertyChanging();
					this._hashMerkleRoot = value;
					this.SendPropertyChanged("hashMerkleRoot");
					this.OnhashMerkleRootChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="VarChar(100)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bits", DbType="Int")]
		public System.Nullable<int> Bits
		{
			get
			{
				return this._Bits;
			}
			set
			{
				if ((this._Bits != value))
				{
					this.OnBitsChanging(value);
					this.SendPropertyChanging();
					this._Bits = value;
					this.SendPropertyChanged("Bits");
					this.OnBitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int")]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSent", DbType="Decimal(10,8)")]
		public System.Nullable<decimal> TotalSent
		{
			get
			{
				return this._TotalSent;
			}
			set
			{
				if ((this._TotalSent != value))
				{
					this.OnTotalSentChanging(value);
					this.SendPropertyChanging();
					this._TotalSent = value;
					this.SendPropertyChanged("TotalSent");
					this.OnTotalSentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
